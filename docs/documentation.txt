This is a 2-step verification authentication module. This requries a MySQL database to be created.
Questions and answers database tables are automatically created if they don't exist.

 * Configure it by adding an entry to config/authsources.php such as this:
 *
 *      'auth2factor' => array(
 *        'auth2factor:auth2factor',
 *        'db.dsn' => 'mysql:host=db.example.com;port=3306',
 *        'db.name' => 'idpauth2factor',
 *        'db.username' => 'simplesaml',
 *        'db.password' => 'password',
 *        'db.answers_salt' => 'secretsalt',
 *        'mainAuthSource' => 'ldap',
 *        'uidField' => 'uid',
 *        'mailField' => 'email',
 *        'ssl.clientVerify' => false, // false by default
 *        'post_logout_url' => 'http://google.com', // URL to redirect to on logout. Optional
 *        'minAnswerLength' => 10, // Minimum answer length. Defaults to 0
 *        'minQuestionLength' => 5, // Minimum user defined question length. Defaults to 0
 *        'initSecretQuestions' => array('Question 1', 'Question 2', 'Question 3'), // optional default questions
 *        'maxCodeAge' => 60 * 5, // Maximum age for a one time code. Defaults to 5 minutes
 *        'maxFailLogin' => 5, // maximum amount of failed logins before locking the account
 *        'mail' => array('host' => '127.0.0.1',
 *                        'port' => '25',
 *                        'from' => 'security@shoaibali.com',
 *                        'subject' => '**TEST**', // This will be added before Code = XYZ
 *                        'body' => '', // This will be added before Code = XYZ
 *                        'debug' => false,
 *                        )
 *       ),

 Once user provides their ldap credentials, if they have pre-existing answers registered in the database
 they are randomly asked one of their chosen question.

 If the user is new, they go through the process of chosing their questions and their respective answers.
 In order to complete the login user must provide a correct answer to its question.

 All answers are normalized to lowercase to accomodate future hashing capability.


 Dependencies

 sudo apt-get install php-pear || yum install php-pear
 pear channel-update pear.php.net
 sudo pear install --alldeps  mail Net_SMTP
 sudo servie apache2 restart